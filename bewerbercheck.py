import streamlit as st
import requests
from dotenv import load_dotenv
import os

load_dotenv()

st.title("Mission Personal ‚Äì Besetzungs-Check (Together.ai)")

# Together.ai API-Key eingeben
api_key = os.getenv("TOGETHER_API_KEY")

# Eingabeformular
with st.form("check_form"):
    unternehmen = st.text_input("Unternehmensname")
    ort = st.text_input("Ort der Hauptniederlassung")
    jobtitel = st.text_input("Stellentitel der Vakanz")
    gehalt = st.text_input("Gehaltsband (z.‚ÄØB. 45.000‚Äì55.000‚ÄØ‚Ç¨)")
    senden = st.form_submit_button("Einsch√§tzung holen")

if senden:
    if not api_key:
        st.error("Bitte gib deinen Together.ai API-Key ein.")
    elif not all([unternehmen, ort, jobtitel, gehalt]):
        st.error("Bitte alle Felder ausf√ºllen.")
    else:
        st.info("‚è≥ Anfrage wird verarbeitet...")

        # üëá Dein detaillierter Prompt
        prompt = f"""
Du bist ein erfahrener, pragmatischer Recruiting-Berater. Du wei√üt, wie z√§h der Markt ist, aber du siehst auch, wo Chancen liegen. Deine Analysen sind sachlich, datenbasiert und klar. Du bist kein Schwarzmaler ‚Äì aber auch kein Sch√∂nredner. Ich gebe dir regelm√§√üig folgende Informationen: Name des Unternehmens, Ort der (Haupt-)Niederlassung, Stellentitel der vakanten Stelle, Gehaltsband der vakanten Stelle.

Analysiere bitte konservativ anhand der vorliegenden 4 Daten die Besetzungswahrscheinlichkeit f√ºr die Vakanz √ºber die Recruiting-Kan√§le: Social Media Kampagnen (im Folgenden "SoMe"), Active Sourcing (im Folgenden "AS"; z.B. via LinkedIn, Xing, Stepstone, etc.) und Stellenanzeigen (im Folgenden "SA"; z.B. Agentur f√ºr Arbeit, Xing, Indeed, etc.). Beziehe alle dir bekannten Plattformen ein (Xing, LinkedIn, Indeed, Stepstone, Instagram, Facebook, etc.)! Bewerte f√ºr jeden Kanal (SoMe, AS, SA) die Erfolgsaussichten auf einer Skala von -10 bis 10 (-10= gar nicht, 10= auf jeden Fall, gebe den Clusternamen des jeweiligen Clusterwertes an. Bewerte sehr zur√ºckhaltend und kritisch. Nutze nur dann Werte √ºber 0, wenn es triftige und belastbare Gr√ºnde gibt. Insbesondere bei Active Sourcing und Stellenanzeigen gilt: Diese Kan√§le erzielen in der Realit√§t h√§ufig schw√§chere Ergebnisse als theoretisch m√∂glich. Bevor du eine positive Einsch√§tzung gibst, frage dich: Gibt es nachweislich genug aktive Kandidat:innen im relevanten Raum, die auch auf die Stelle reagieren w√ºrden? Wenn nicht, bewerte mit -5 oder schlechter. SoMe darf moderat eingesch√§tzt werden ‚Äì AS und SA m√ºssen realit√§tsnah, tendenziell unterdurchschnittlich eingesch√§tzt werden. Gib im Zweifel lieber einen schlechteren Wert an. Nutze das Cluster-System streng ‚Äì kein Sch√∂nreden. Du kennst die Erfolgsquoten aus vergleichbaren realen Projekten. Ber√ºcksichtige die hohe Ausfallrate bei R√ºckmeldungen √ºber AS und die sinkende Sichtbarkeit klassischer Stellenanzeigen auf Jobb√∂rsen. Wenn ein Kanal theoretisch funktioniert, aber praktisch kaum Response erzeugt, gib eine entsprechend negative Bewertung. Wenn begr√ºndete Chancen bestehen, soll das deutlich werden ‚Äì pessimistisch, aber nicht √ºberzogen negativ. Vermeide Extreme, es sei denn, die Datenlage ist wirklich eindeutig.) und begr√ºnde die Einsch√§tzung anhand folgender Kriterien mit aktuellen Daten:

Zahlenbereich und Cluster-Name:
-10 bis -9: Gar nicht besetzbar
-8 bis -7: Extrem kritisch
-6 bis -5: Sehr schwierig
-4 bis -3: Kritisch
-2 bis -1: Eher nicht besetzbar
0 bis 1: Grenzwertig
2 bis 3: Mit Einschr√§nkungen m√∂glich
4 bis 5: Machbar
6 bis 7: Gut besetzbar
8 bis 9: Sehr gut besetzbar
10: In jedem Fall besetzbar

Zu ber√ºcksichtigen:
- Zielgruppe und deren Online-Verhalten
- Attraktivit√§t der Stelle (Gehalt, Aufgaben, Standort, Arbeitgebermarke)
- Marktverf√ºgbarkeit passender Kandidat:innen auf diversen Kan√§len
- Erfahrungswerte aus vergleichbaren Projekten
- aktuelle politische Situation in Deutschland und der Welt
- aktuelle Arbeitsmarkt-Situation (politisch)
- Standort und das Umland (z.‚ÄØB. Besiedlungsdichte)
- Voraussetzungen zum Berufsbild (z.‚ÄØB. reglementierte Berufe, Systemrelevanz)
- Markt-Konkurrenz durch √§hnliche Vakanzen in der Region

Jobprofil:
- Position: {jobtitel}
- Standort: {ort}
- Gehaltsspanne: {gehalt}

Kunde:
- Unternehmensname: {unternehmen}

Bitte gib die Ergebnisse in folgender Struktur aus:

1. Besetzungswahrscheinlichkeit √ºber die Kan√§le (SoMe, AS, SA):
2. Marktsituation/Kandidatenlage in der jeweiligen Stadt/Region:
3. Jobprofil:
4. Kunde:
5. Empfohlene Ma√ünahme/-n:
6. Ballungsr√§ume verf√ºgbarer Kandidat:innen (inkl. St√§dte mit mind. 10 passenden Personen)
"""

        url = "https://api.together.xyz/v1/chat/completions"
        headers = {
            "Authorization": f"Bearer {api_key}",
            "Content-Type": "application/json"
        }
        data = {
            "model": "mistralai/Mixtral-8x7B-Instruct-v0.1",
            "messages": [{"role": "user", "content": prompt}],
            "max_tokens": 1000,
            "temperature": 0.7
        }

        try:
            response = requests.post(url, headers=headers, json=data)
            response.raise_for_status()
            result = response.json()["choices"][0]["message"]["content"]
            st.success("‚úÖ Einsch√§tzung:")
            st.write(result)
        except requests.exceptions.RequestException as e:
            st.error(f"Fehler bei der Anfrage: {e}")
        except KeyError:
            st.error("Fehler beim Verarbeiten der Antwort. Ist dein API-Key korrekt?")